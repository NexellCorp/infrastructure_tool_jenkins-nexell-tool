#!/bin/bash
JENKINS_GIT_COMMAND_FILE="/tmp/jenkins-git-commands.txt"
HISTORY_FILE="${WORKSPACE}/patch-history.txt"

BRANCH="kitkat-mr1-pyrope-dev"
BOARD_NAME="lynx"
TOP="${WORKSPACE}/${BRANCH}"
RESULT_DIR="${TOP}/result"
BOOT_DEVICE_TYPE="spirom"
BUILD_NAME="${BUILD_TAG}-${BOARD_NAME}-${BUILD_ID}"

source ${JENKINS_HOME}/jenkins-nexell-tool/build.sh

PATH=${JENKINS_HOME}/bin:$PATH

project=$(get_project $JENKINS_GIT_COMMAND_FILE)
echo "project: $project"

echo "workspace: ${WORKSPACE}"

if [ ! -e ${WORKSPACE}/${BRANCH}  ]; then
    download_android_source ${BRANCH}
else
    cd ${BRANCH}
    repo sync
fi

patch_dir=$(get_patch_dir $project)
echo "patch_dir: $patch_dir"

pushd $(pwd)
cd $patch_dir
patch_cmd=$(get_cmd $JENKINS_GIT_COMMAND_FILE)
echo "patch_cmd: $patch_cmd"
patch_result=$(eval $patch_cmd)
echo "patch_result: $patch_result"
popd

write_history $HISTORY_FILE $(get_id $JENKINS_GIT_COMMAND_FILE)

build_android ${BOARD_NAME}

if [ $? != 0  ]; then
    echo "build failed"
    exit -1
fi
rm -f $JENKINS_GIT_COMMAND_FILE
echo "build success"

source ${JENKINS_HOME}/jenkins-nexell-tool/packaging.sh
get_root_device
generate_partitionmap
generate_2ndboot
mkdir -p ${WORKSPACE}/${BUILD_NAME}/images
cp ${RESULT_DIR}/partmap.txt ${WORKSPACE}/${BUILD_NAME}/images
cp ${RESULT_DIR}/*.bin ${WORKSPACE}/${BUILD_NAME}/images
cp ${RESULT_DIR}/*.img ${WORKSPACE}/${BUILD_NAME}/images
cd ${WORKSPACE}/${BUILD_NAME}
tar cvjf images.tar.bz2 images
rm -rf images
cd ${WORKSPACE}

python ${JENKINS_HOME}/jenkins-nexell-tool/linaro-cp.py -k 1234abcd --server 192.168.1.18:8080/ ${BUILD_NAME} android/${BUILD_NAME}
